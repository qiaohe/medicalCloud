module.exports = {
    employee: {
        findByUserName: 'select e.*, h.`name` as hospitalName, h.icon from Employee e left join Hospital h on e.hospitalId=h.id where e.hospitalId=? and e.mobile=?',
        findByUsernameWithHospital: 'select e.* from Employee e where hospitalId=? and mobile=?',
        findByUsernameAndDomain: 'select e.*, h.`name` as hospitalName, h.icon from Employee e left join Hospital h on e.hospitalId=h.id where e.mobile=? and h.domainName=? ',
        findByName: 'select * from Employee where hospitalId=? and name=?',
        insert: 'insert Employee set ?',
        insertRole: 'insert Role set ?',
        deleteRole: 'delete from Role where id =?',
        findRoleByName: 'select id from Role where hospitalId=? and `name` like ?',
        updateRole: 'update Role set ? where id=?',
        updateJobTitle: 'update JobTitle set ? where id=?',
        insertJobTitle: 'insert JobTitle set ?',
        deleteJobTitle: 'delete from JobTitle where role=? and id= ?',
        findByRole: 'select id, name from Employee where role=? and hospitalId=?',
        findByRoleName: 'select e.`name`, e.id from Employee e left JOIN Role r on e.role = r.id where e.hospitalId=? and r.`name` like ',
        findNoPlanBusinessPeople: 'select id, name from Employee where hospitalId = ? and role = 4 and id not in(select DISTINCT businessPeopleId from Performance where left(yearMonth, 4) =?)',
        updateEmployee: 'update Employee set password=? where mobile = ?',
        updateEmployeeByUid: 'update Employee set ? where id = ?',
        findEmployees: 'select SQL_CALC_FOUND_ROWS e.id, e.`name`, e.mobile, e.gender, e.birthday, job.`name` as jobTitle, role.`name` as role, e.`status`, e.admin as isAdmin, e.maxDiscountRate  from Employee e left JOIN Role role on role.id = e.role left JOIN JobTitle job on job.id = e.jobTitle where e.hospitalId =? order by e.id desc limit ?,?',
        findRoles: 'select id, name from Role where hospitalId = ?',
        findById: 'select * from Employee where id=? and hospitalId =?',
        findByIdWithHospital: 'select e.*, h.name as hospitalName from Employee e, Hospital h where e.hospitalId = h.id and e.hospitalId= ? and  e.id = ?',
        findJobTitleByRole: 'select id, name from JobTitle where hospitalId = ? and role =?',
        findJobTitleById: 'select * from JobTitle where id = ?',
        findDepartmentById: 'select * from Department where id=?',
        delete: 'delete from Employee where id =?',
        updateDoctorByDepartment: 'update Doctor set departmentName=? where departmentId=?'
    },
    businessPeople: {
        findSalesMan: 'select SQL_CALC_FOUND_ROWS id,headPic, name, gender, mobile, createDate, `status`, age, `comment`, hiredDate from SalesMan where hospitalId=?',
        findSalesManRegistrationForOthers: 'select SQL_CALC_FOUND_ROWS id, createDate, businessPeopleId, businessPeopleName, departmentName, departmentId, doctorId, doctorName, patientName, registerDate, outpatientStatus, totalFee from Registration where hospitalId=? and businessPeopleId>0',
        sumSalesManRegistrationForOthers: 'select sum(totalFee) as sumTotalFee from Registration where hospitalId=? and businessPeopleId>0',
        findCheckIn: 'select SQL_CALC_FOUND_ROWS c.*, s.`name` as salesManName from CheckIn c left JOIN SalesMan s on c.salesMan = s.id where s.hospitalId=?',
        insertSalesManPerformanceBy: 'insert Performance set ?',
        updateSalesManPerformance: 'update Performance set ? where id = ?',
        findSalesManById: 'select * from SalesMan where id = ?',
        findSalesManPerformanceBy: 'select * from Performance where salesMan=? and yearMonth=?',
        findSalesManPerformance: 'select * from Performance where salesMan = ? and left(yearMonth, 4) =?',
        updateSalesMan: 'update SalesMan set ? where id=?',
        findSalesManBy: 'select * from SalesMan where hospitalId = ? and mobile =?',
        findSalesManName: 'select id, name from SalesMan where hospitalId = ?',
        insertSalesMan: 'insert SalesMan set ?',
        deleteSalesMan: 'delete from SalesMan where id =?',
        deletePerformancesBy: 'delete from Performance where businessPeopleId = ? and left(yearMonth,4) = ?',
        findRegistrationById: 'select * from Registration where id=?',
        updatePatientBasicInfo: 'update PatientBasicInfo set ? where id = ?',
        findRegistrationsByUid: 'select r.id, r.patientMobile, r.doctorId, doctorName, doctorHeadPic,registrationFee, departmentName,doctorJobTitle, hospitalName, patientName,concat(DATE_FORMAT(r.registerDate, \'%Y-%m-%d \') , s.`name`) as shiftPeriod, orderNo, r.status  from Registration r, ShiftPeriod s where r.shiftPeriod = s.id and creator = ? and r.registrationType <>7 order by r.registerDate, r.shiftPeriod limit ?,?',
        findRegistrationsByUidAndMobile: 'select r.id, r.patientMobile, r.doctorId, doctorName, doctorHeadPic,registrationFee, departmentName,doctorJobTitle, hospitalName, patientName,concat(DATE_FORMAT(r.registerDate, \'%Y-%m-%d \') , s.`name`) as shiftPeriod, orderNo, r.status  from Registration r, ShiftPeriod s where r.shiftPeriod = s.id and creator = ? and r.patientMobile=? and r.registrationType =7 order by r.id desc limit ?,?',
        findShiftPeriodById: 'select * from ShiftPeriod where hospitalId = ? and id =?',
        insertPatient: 'insert Patient set ?',
        findPatientByBasicInfoId: 'select * from Patient where patientBasicInfoId = ? and hospitalId=?',
        insertPatientBasicInfo: 'insert PatientBasicInfo set ?',
        findPatientBasicInfoBy: 'select * from PatientBasicInfo where mobile=?',
        findPatientBasicInfoByPatientId: 'select pb.* from PatientBasicInfo pb left JOIN Patient p on pb.id = p.patientBasicInfoId where p.id=?',
        findPatientBy: 'select * from Patient where hospitalId=? and patientBasicInfoId=?',
        updateShiftPlan: 'update ShiftPlan set actualQuantity = actualQuantity + 1 where doctorId = ? and day =? and shiftPeriod = ?',
        updateShiftPlanDec: 'update ShiftPlan set actualQuantity = actualQuantity - 1 where doctorId = ? and day =? and shiftPeriod = ?',
        findShiftPlanByDoctorAndShiftPeriod: 'select * from ShiftPlan where doctorId=? and day=? and shiftPeriod =?',
        insertRegistration: 'insert Registration set ?',
        findContactById: 'select * from InvitationContact where id = ?',
        insertInvitation: 'insert Invitation set ?',
        updateContact: 'update InvitationContact set inviteTimes = inviteTimes + 1 where id =?',
        findContactBusinessPeopleIdAndMobile: 'select * from InvitationContact where businessPeopleId=? and mobile=?',
        insertContact: 'insert InvitationContact set ?',
        findPerformanceByMonth: 'select actualCount, plannedCount, ROUND(actualCount / plannedCount, 2) as completePercentage from Performance where businessPeopleId = ? and yearMonth=?',
        findPerformanceByYear: 'select sum(actualCount)as actualCount, sum(plannedCount)  as plannedCount from Performance where businessPeopleId = ? and SUBSTRING(yearMonth, 1, 4) = ?',
        findContactsBy: 'select id, mobile, name, createDate, inviteTimes, source, inviteResult from InvitationContact where businessPeopleId=?',
        findContactsByPagable: 'select SQL_CALC_FOUND_ROWS ic.id, ic.mobile, ic.name, ic.createDate, ic.inviteTimes, ic.source, ic.inviteResult,gc.`name` as groupName from InvitationContact ic left join GroupCompany gc on gc.id = ic.groupId where ic.businessPeopleId=? limit ?, ?',
        findShiftPeriods: 'select id, name from ShiftPeriod where hospitalId = ?',
        findAvailableShiftPeriods: 'select shiftPeriod, p.`name` from ShiftPlan sp, ShiftPeriod p where p.id = sp.shiftPeriod and sp.hospitalId=? and doctorId=? and `day`=? and plannedQuantity > actualQuantity order by shiftPeriod',
        addShiftPeriod: 'insert ShiftPeriod set ?',
        deleteShiftPeriod: 'delete from ShiftPeriod where id = ?',
        updateShiftPeriod: 'update ShiftPeriod set name=? where id=?',
        transferContact: 'update InvitationContact set businessPeopleId=? where id in ',
        addTransferHistory: 'insert ContactTransferHistory set ?',
        insertPerformance: 'insert Performance set ?',
        updatePerformance: 'update Performance set plannedCount = ? where businessPeopleId= ? and yearMonth = ?',
        findPerformances: 'select SQL_CALC_FOUND_ROWS e.id as salesManId, e.`status`,e.`name`, p.yearMonth, actual, plan,IF(plan =0, 0, ROUND(actual / plan, 2)) as completePercentage from Performance p,SalesMan e where e.id = p.salesMan and e.hospitalId=?',
        sumActualPerformance: 'select sum(actual) as totalActual from Performance p,SalesMan e where e.id = p.salesMan and e.hospitalId=?',
        findBusinessPeopleWithPage: 'select SQL_CALC_FOUND_ROWS distinct p.businessPeopleId, e.name from Performance p, Employee e where e.id = p.businessPeopleId and e.hospitalId=?',
        findPerformancesBy: 'select e.id as businessPeopleId, e.`name`, p.yearMonth, actualCount, plannedCount,IF(plan =0, 0, ROUND(actual / plan, 2)) as completePercentage from Performance p, Employee e where e.id = p.businessPeopleId and p.businessPeopleId=? order by p.yearMonth'
    },
    hospital: {
        findAll: 'select id, domainName from Hospital where enabled=1',
        findAllHospitals: 'select * from Hospital',
        countOfEmployeesForDepartment: 'select count(*) as count from Employee where department=?',
        countOfJobTitleForRole: 'select count(*) as count from JobTitle where role=?',
        countOfEmployeeForJobTitle: 'select count(*) as count from Employee where role=? and jobTitle=?',
        findDepartments: 'select id, name from Department where hospitalId = ?',
        findByNameLike: 'select id, name, tag from Hospital where name like ?',
        findById: 'select id, name, tag, images, address, icon, introduction, trafficRoute, telephone, districtId, provId, cityId from Hospital where id = ?',
        findByIdWithGroupMessage: 'select messageCountPerMonth from Hospital where id =?',
        insertPatient: 'insert Patient set ?',
        findPatientByBasicInfoId: 'select * from Patient where patientBasicInfoId = ?',
        findJobTitles: 'select id, name from JobTitle where hospitalId =?',
        findHospitalByDomainName: 'select * from Hospital where domainName = ?',
        update: 'update Hospital set ? where id = ?',
        findCustomerServiceId: 'select customerServiceUid from Hospital where id =? ',
        deleteMenuByJobTitle: 'delete from JobTitleMenuItem where jobTitleId=? and menuItem=?',
        insertMenuItem: 'insert JobTitleMenuItem set ?',
        findJobTitleMenuItem: 'select * from JobTitleMenuItem where jobTitleId=? and menuItem=?',
        findMenusByJobTitle: 'select m.`name`, m.id from JobTitleMenuItem i left JOIN Menu m on m.id = i.menuItem where i.jobTitleId=?',
        findMenus: 'select id, name, pid, sortIndex from Menu',
        findShareSetting: 'select recommendationFee from Hospital where id = ?',
        findMyMenus: 'select u.name, u.id, u.pid, u.routeUri, u.icon from Employee e left JOIN JobTitleMenuItem m on m.jobTitleId = e.jobTitle left join Menu u on u.id = m.menuItem  where e.id = ? order by u.pid, u.sortIndex'
    },

    department: {
        findByHospital: 'select SQL_CALC_FOUND_ROWS * from Department where hospitalId = ? order by id desc limit ?, ?',
        insert: 'insert Department set ?',
        update: 'update Department set ? where id = ?',
        delete: 'delete from Department where id=?'
    },

    doctor: {
        insert: 'insert Doctor set ?',
        findDoctors: 'select id, name from Doctor where hospitalId=?',
        findDiscountRateOfDoctor: 'select maxDiscountRate, d.clinic from Employee e, Doctor d  where e.id = d.employeeId and e.hospitalId=? and e.id=?',
        findDoctorsByHospital: 'select SQL_CALC_FOUND_ROWS d.*, e.birthday, d.clinic, e.mobile from Doctor d, Employee e where e.id = d.employeeId and d.status <> 2 and d.hospitalId = ? order by d.id desc limit ?, ?',
        findDoctorsGroupByDepartment: 'select d.id, d.name, dep.`name` as departmentName from DoctorDepartment dd left JOIN Doctor d on d.id = dd.doctorId left join Department dep on dep.id = dd.departmentId where d.status <> 2 and d.hospitalId = ?',
        findByDepartment: 'select doc.id, doc.name, d.`name` as departmentName, doc.hospitalName, doc.headPic,doc.registrationFee, doc.speciality,doc.jobTitle from DoctorDepartment dd left JOIN Department d on dd.departmentId = d.id left JOIN Doctor doc on doc.id=dd.doctorId where d.hospitalId = ?  and dd.departmentId = ?',
        findById: 'select id, name, hospitalId, hospitalName, headPic,registrationFee, speciality,jobTitle,jobTitleId from Doctor where id =?',
        findShitPlans: 'select p.`name` as period, `day`, actualQuantity, plannedQuantity, p.id as periodId from ShiftPlan sp, ShiftPeriod p where sp.shiftPeriod = p.id and sp.doctorId = ? and sp.day>? and sp.day<=? and sp.actualQuantity < sp.plannedQuantity and sp.plannedQuantity > 0 order by sp.day, sp.shiftPeriod',
        findBy: 'select id, name, departmentName,hospitalId, hospitalName, headPic,registrationFee, speciality,jobTitle from Doctor where departmentId=? and registrationFee=? and id<>?',
        update: 'update Doctor set ? where id = ?',
        updateBy: 'update Doctor set ? where employeeId = ?',
        delete: 'delete from Doctor where id=?',
        deleteDoctorBy: 'delete from Doctor where employeeId =?',
        findWaitOutpatients: 'select SQL_CALC_FOUND_ROWS concat(DATE_FORMAT(r.registerDate, \'%Y-%m-%d \') , sp.`name`) as registerDate, r.id, r.patientName, r.patientMobile, r.gender, r.age, r.sequence, r.registrationType, r.`comment`, r.outPatientType, r.createDate, r.businessPeopleName as recommender, r.outpatientStatus, pi.balance, pi.memberType,pi.memberCardNo, r.patientId, d.clinic, d.id as doctorId,d.name as doctorName, r.nurse, e.name as nurseName, pi.medicalRecordNo from Registration r LEFT JOIN  PatientBasicInfo p on p.id = r.patientBasicInfoId left JOIN ShiftPeriod sp on sp.id = r.shiftPeriod LEFT JOIN Patient pi on pi.id = r.patientId LEFT JOIN Doctor d ON d.id = r.doctorId left join Employee e on e.id = r.nurse where d.employeeId = ? and r.registerDate=? and r.status<>4 and r.sequence is not null order by field(r.outpatientStatus, 5, 0, 1), r.shiftPeriod, r.createDate limit ?, ?',
        findFinishedCountByDate: 'select count(*) as count from Registration r where r.doctorId = ? and r.registerDate=? and r.outPatientStatus=1',
        findHistoryOutpatients: 'select SQL_CALC_FOUND_ROWS concat(DATE_FORMAT(r.registerDate, \'%Y-%m-%d \') , sp.`name`) as registerDate, r.id, r.patientName, r.patientMobile, r.gender, r.age, r.sequence, r.registrationType, r.`comment`, r.outPatientType, r.createDate, r.businessPeopleName as recommender, r.outpatientStatus from Registration r LEFT JOIN  PatientBasicInfo p on p.id = r.patientBasicInfoId left JOIN ShiftPeriod sp on sp.id = r.shiftPeriod LEFT JOIN Doctor d ON d.id = r.doctorId where d.employeeId = ? order by r.registerDate desc , r.sequence',
        insertDoctorDepartment: 'insert DoctorDepartment set ?',
        findDepartmentsOfDoctor: 'select d.id, d.`name` from DoctorDepartment dd left join Department d on dd.departmentId = d.id where dd.doctorId = ?',
        deleteDoctorDepartment: 'delete from DoctorDepartment where doctorId = ?',
        deleteDoctorDepartmentBy: 'delete from DoctorDepartment where doctorId in (SELECT id from Doctor where employeeId=?)'
    },

    registration: {
        updateRegistrationFee: 'update Registration set totalFee = totalFee + ?, ? where id =?',
        updateSalesManPerformanceByMonth: 'update Performance set actual = actual + ? where salesMan=? and yearMonth=?',
        insertRegistrationCancelHistory: 'insert RegistrationCancelHistory set ?',
        addShiftPlan: 'insert ShiftPlan set ?',
        updateShiftPlanBy: 'update ShiftPlan set plannedQuantity=? where doctorId=? and day=? and shiftPeriod=?',
        findShiftPlans: 'select day, shiftPeriod, actualQuantity, plannedQuantity, p.name from ShiftPlan s left join ShiftPeriod p on s.shiftPeriod = p.id where s.hospitalId = ? and doctorId = ? and s.day>=? and s.day<=? order by s.day desc',
        findShiftPlansByDay: 'select shiftPeriod, actualQuantity, plannedQuantity from ShiftPlan where hospitalId = ? and doctorId = ? and day = ? order by shiftPeriod desc',
        findShiftPlansByDayWithName: 'select shiftPeriod,s2.`name` as shiftPeriodName,plannedQuantity - actualQuantity as restQuantity from ShiftPlan s1, ShiftPeriod s2 where s1.shiftPeriod = s2.id and s1.hospitalId = ? and s1.doctorId = ? and s1.day = ? order by s1.shiftPeriod desc',
        insert: 'insert Registration set ?',
        updateShiftPlan: 'update ShiftPlan set actualQuantity = actualQuantity + 1 where doctorId = ? and day =? and shiftPeriod = ?',
        updateShiftPlanDec: 'update ShiftPlan set actualQuantity = actualQuantity - 1 where doctorId = ? and day =? and shiftPeriod = ?',
        findShiftPeriodById: 'select * from ShiftPeriod where hospitalId = ? and id =?',
        findRegistrationsByUid: 'select r.id, r.doctorId, doctorName, doctorHeadPic,registrationFee, departmentName,doctorJobTitle, hospitalName, patientName,concat(DATE_FORMAT(r.registerDate, \'%Y-%m-%d \') , s.`name`) as shiftPeriod, orderNo, r.status  from Registration r, ShiftPeriod s where r.shiftPeriod = s.id and paymentType =1 and patientBasicInfoId = ? and r.status <>4 order by r.registerDate, r.shiftPeriod limit ?,?',
        findById: 'select * from Registration where id =?',
        updateRegistration: "update Registration set ? where id = ?",
        findRegistrations: 'select SQL_CALC_FOUND_ROWS r.transferDoctor,r.transferDoctorName,r.content,p.id as patientId, p.patientBasicInfoId, ot.name as outPatientServiceTypeName, r.outPatientServiceType,r.id,mo.orderNo,r.outpatientStatus,p.counselor, r.registerDate,  s.`name` as shiftPeriod, p.medicalRecordNo,r.patientMobile,r.patientName,r.gender, p.balance,p.source, p.memberCardNo,r.memberType, r.doctorName, r.`comment`, r.registrationFee, r.registrationType,r.departmentName, po.address,r.`status`, e.`name` as creatorName,r.createDate, r.outPatientType, r.status, r.sequence, r.businessPeopleName from Registration r left JOIN ShiftPeriod s ON s.id= r.shiftPeriod left join Patient p on p.id=r.patientId left join Doctor d on d.id=r.doctorId left join MedicalOrder mo on mo.registrationId= r.id left join PatientBasicInfo po on po.id = p.patientBasicInfoId left JOIN Employee e on e.id = r.creator left join OutpatientServiceType ot on ot.id=r.outPatientServiceType LEFT JOIN Doctor dd on dd.id = r.doctorId where r.status <>4 and r.hospitalId = ? order by r.id desc limit ?, ?',
        findRegistrationsById: 'select * from Registration where id=?',
        findRegistrationsByIdWithDetail: 'select r.*, po.address, p.medicalRecordNo, d.floor, doc.clinic from Registration r left JOIN Department d on d.id = r.departmentId left JOIN Doctor doc on doc.id = r.doctorId LEFT JOIN Patient p on p.id = r.patientId LEFT JOIN PatientBasicInfo po on po.id = p.patientBasicInfoId where r.id=?',
        findCurrentQueueByRegId: 'select r.id,doctorName, departmentName, patientName, registrationType, outPatientType, outpatientStatus, p.balance, p.memberType from Registration r LEFT JOIN Patient p on p.id =r.patientId where r.id =?',
        findRegistrationsBy: 'select SQL_CALC_FOUND_ROWS ot.name as outPatientServiceTypeName, r.content, r.transferDoctor,r.transferDoctorName, p.medicalRecordNo, r.outPatientType, r.id,r.outpatientStatus, r.patientMobile,r.patientName,r.gender, p.balance, p.memberCardNo, r.memberType, r.doctorName, r.`comment`, r.registrationFee, r.registrationType, r.departmentName, r.registerDate , s.`name` as shiftPeriod, r.outPatientType, r.status, r.sequence, e.name as businessPeopleName, r.outpatientStatus from Registration r LEFT JOIN SalesMan e on e.id=r.businessPeopleId left JOIN ShiftPeriod s ON s.id= r.shiftPeriod left join Patient p on r.patientId =p.id left join OutpatientServiceType ot on ot.id=r.outPatientServiceType LEFT JOIN Doctor dd on dd.id = r.doctorId where r.hospitalId = ? and r.registerDate=? order by r.id desc limit ?, ?',
        findAppointments: 'select  SQL_CALC_FOUND_ROWS a.*,sp.`name` as periodName, p.medicalRecordNo, p.memberCardNo, p.memberType, p.source, po.`name`, po.realName, po.gender,po.mobile from Appointment a left JOIN Patient p on p.id = a.patientId left join PatientBasicInfo po on po.id = p.patientBasicInfoId left join ShiftPeriod sp on sp.id = a.period left JOIN Doctor d on d.id = a.doctor where a.hospitalId=? ',
        addAppointment: 'insert Appointment set ?',
        updateAppointment: 'update Appointment set ? where id =?',
        findPatientsOfDoctorPeriod: 'select distinct patientName from Registration where doctorId=? and shiftPeriod =? and registerDate=?'
    },
    patient: {
        findPatientByMemberCard: 'select id from Patient where memberCardNo = ?',
        updatePatient: 'update Patient set ? where id = ?',
        findByPatientByMobile: 'SELECT p.memberType, pc.gender, pc.birthday, pc.mobile, pc.realName from Patient p LEFT JOIN PatientBasicInfo pc on pc.id = p.patientBasicInfoId where hospitalId = ? and pc.mobile = ?',
        findGroupCompanies: 'select SQL_CALC_FOUND_ROWS gc.*, e.`name` as recommenderName from GroupCompany gc left JOIN Employee e on e.id = gc.recommender where gc.hospitalId=? order by gc.id desc limit ?, ?',
        updateGroupCompany: 'update GroupCompany set ? where id = ?',
        deleteGroupCompany: 'delete from GroupCompany where id = ?',
        insertGroupCompany: 'insert GroupCompany set ?',
        findPatients: 'select SQL_CALC_FOUND_ROWS p.medicalRecordNo, pb.address,pb.idCard, p.counselor,pb.birthday,p.id, pb.`realName`,pb.createDate, pb.gender, pb.headPic,pb.birthday, pb.mobile, p.memberCardNo,p.memberType,p.source,e.`name` as recommenderName,p.consumptionLevel, gc.`name` as groupName, p.groupId from Patient p left JOIN SalesMan e on e.id = p.recommender left JOIN GroupCompany gc on gc.id = p.groupId, PatientBasicInfo pb where p.patientBasicInfoId = pb.id and p.hospitalId =? order BY p.createDate desc limit ?, ?',
        insertPrePaidHistory: 'insert PrepaidHistory set ?',
        updatePatientBalance: 'update Patient set balance = balance + ? where id =?',
        insertTransactionFlow: 'insert TransactionFlow set ?',
        findByPatientId: 'select * from Patient where id=?',
        findPatientBasicInfoById: 'select * from PatientBasicInfo where id=?',
        findByPatientBasicInfo: 'select e.id as recommenderId, pb.address, pb.idCard, p.balance, p.cashbackType, p.`comment`, p.maxDiscountRate, p.source, p.id, pb.`realName`, pb.gender, pb.headPic,pb.birthday, pb.mobile, p.memberCardNo,p.memberType,p.source,e.`name` as recommenderName,p.medicalRecordNo,p.consumptionLevel, gc.`name` as groupName, p.groupId  from Patient p left JOIN SalesMan e on e.id = p.recommender LEFT JOIN GroupCompany gc on gc.id =p.groupId , PatientBasicInfo pb where p.patientBasicInfoId = pb.id and p.id = ? and p.hospitalId =?',
        findTransactionFlows: 'select SQL_CALC_FOUND_ROWS tf.*, m.paymentType1,m.paymentType2, m.paymentType3 from TransactionFlow tf left join MedicalOrder m on m.orderNo = tf.orderNo where tf.patientId=? and tf.hospitalId = ? order by tf.createDate desc limit ?, ?',
        findRegistrations: 'select SQL_CALC_FOUND_ROWS * from Registration where patientId = ? and hospitalId = ? order by createDate desc limit ?,?',
        findGroupCompanyById: 'select gc.*, e.`name` as recommenderName from GroupCompany gc left JOIN Employee e on e.id = gc.recommender where gc.id=?'
    },
    city: {
        findProvinces: 'select DISTINCT province from city',
        findCities: 'select cityId, city from city where province=?'
    },
    notification: {
        insert: 'insert Notification set ?',
        insertGroupMessage: 'insert GroupMessage set ?',
        findGroupMessages: 'select SQL_CALC_FOUND_ROWS * from GroupMessage where hospitalId = ? order by createDate desc limit ?, ?',
        findAll: 'select SQL_CALC_FOUND_ROWS * from Notification where hospitalId=? ',
        findPatientQueue: 'select doctorId, doctorName, r.departmentName, d.clinic, patientName, sequence from Registration r LEFT JOIN Doctor d on d.id = r.doctorId left JOIN Department dep on dep.id = d.departmentId left JOIN Hospital h ON h.id = r.hospitalId where r.registerDate = ? and dep.floor = ? and h.domainName= ? and r.sequence is not null and (r.outpatientStatus =0 or r.outpatientStatus = 5) and r.status <>4 order by doctorId, sequence',
        findPatientQueueByDepartmentId: 'select doctorId, doctorName, r.departmentName, d.clinic, patientName, sequence, dep.floor from Registration r LEFT JOIN Doctor d on d.id = r.doctorId left JOIN Department dep on dep.id = d.departmentId where r.registerDate = ? and dep.id = ? and r.sequence is not null and (r.outpatientStatus =0 or r.outpatientStatus = 5) and r.status <>4 order by doctorId, sequence',
        findPatientQueueBy: 'select doctorId, doctorName, r.departmentName, d.clinic, patientName, sequence, dep.floor from Registration r LEFT JOIN Doctor d on d.id = r.doctorId left JOIN Department dep on dep.id = d.departmentId where r.id=?',
        findPatients: 'select pi.realName as patientName, pi.`name` as nickName,pi.gender, pi.mobile as patientMobile,d.uid, d.token from Device d LEFT JOIN PatientBasicInfo pi on pi.id= d.uid where (pi.id in(select patientBasicInfoId from Patient where hospitalId=?)',
        findSequencesBy: 'select r.sequence from Registration r where r.doctorId =? and sequence>=? and (r.outpatientStatus =0 or r.outpatientStatus = 5) and r.registerDate= ? order by sequence limit 3'
    },
    device: {
        insert: 'insert Device set ?',
        findByToken: 'select * from Device where token = ?',
        findByUid: 'select * from Device where uid = ?',
        update: 'update Device set ? where token =?',
        findTokenByUid: 'select token from Device where uid=?'
    },
    dict: {
        findDrugInventoriesNoPagination: 'select d.code, d.name, d.type, d.specification, di.batchNo, di.amount, di.restAmount, di.purchasePrice, d.unit,d.tinyUnit,di.expireDate, di.createDate, di.operatorName from DrugInventory di left join Drug d on di.drugId =d.id where d.hospitalId=? order by di.createDate desc',
        findDrugInventoryHistoryByType: 'select d.*, dh.amount, dh.batchId, dh.`comment`, dh.operateDate, dh.operator, dh.operatorName from DrugInventoryHistory dh left JOIN Drug d on dh.`code` = d.`code` where d.hospitalId=? and dh.type=?',
        insertDisease: 'insert DiseaseDic set ?',
        insertDrugInventoryHistory: 'insert DrugInventoryHistory set ?',
        updateDisease: 'update DiseaseDic set ? where id=?',
        deleteDisease: 'delete from DiseaseDic where id = ?',
        findDiseases: 'select SQL_CALC_FOUND_ROWS d.*, dep.`name` as departmentName, e.`name` as creatorName from DiseaseDic d left JOIN Department dep on dep.id=d.departmentId left JOIN Employee e on e.id = d.creator where d.hospitalId = ? ',
        insertDictItem: 'insert Dictionary set ?',
        updateDictItem: 'update Dictionary set ? where id = ?',
        deleteDictItem: 'delete from Dictionary where id =?',
        findDictItems: 'select SQL_CALC_FOUND_ROWS * from Dictionary where hospitalId =? and type=? limit ?,?',
        findMedicalTemplates: 'select SQL_CALC_FOUND_ROWS d.`name` as departmentName, dic.`name` as diseaseType, m.* from MedicalTemplate m left JOIN DiseaseDic dic on dic.id=m.diseaseId left JOIN Department d on d.id=m.departmentId where m.hospitalId =? ',
        insertMedicalTemplte: 'insert MedicalTemplate set ?',
        getMedicalTemplateBy: 'select id, name from MedicalTemplate where hospitalId=? and departmentId=?',
        findMedicalTemplateById: 'select * from MedicalTemplate where id=?',
        deleteMedicalTemplate: 'delete from MedicalTemplate where id=?',
        updateMedicalTemplate: 'update MedicalTemplate set ? where id=?',
        insertChargeItem: 'insert ChargeItem set ?',
        updateChargeItem: 'update ChargeItem set ? where id=?',
        deleteChargeItem: 'delete from ChargeItem where id=?',
        findChargeItemById: 'select * from ChargeItem where id=?',
        findChargeItems: 'select SQL_CALC_FOUND_ROWS c.*, d.`value` as categoryName from ChargeItem c left join Dictionary d on d.id = c.categoryId where c.hospitalId=? ',
        findDrugs: 'select SQL_CALC_FOUND_ROWS * from Drug where hospitalId=? order by id desc LIMIT ?, ?',
        findDrugsBy: 'select * from Drug where hospitalId=? and ',
        findChargeItemsBy: 'select * from ChargeItem where hospitalId=? and ',
        insertDrug: 'insert Drug set ?',
        findMedicalTemplatesBy: 'select * from MedicalTemplate where hospitalId=? and name =?',
        insertDrugByBatch: 'INSERT INTO Drug (code, name,company, type, dosageForm, specification,unit, sellPrice,criticalInventory, hospitalId, pinyin) VALUES ?',
        updateDrug: 'update Drug set ? where id = ?',
        deleteDrug: 'delete from Drug where id=?',
        findDrugById: 'select * from Drug where id = ?',
        findDrugInventoriesByDrug: 'select SQL_CALC_FOUND_ROWS dg.sellPrice, h.*, d.batchNo, d.restAmount from DrugInventoryHistory h left JOIN DrugInventory d on h.inventoryId = d.id left join Drug dg on dg.id = h.drugId where h.drugId=? and h.hospitalId=? limit ?,?',
        findDrugInventory: 'select SQL_CALC_FOUND_ROWS DISTINCT d.id, d.name, d.company, d.code, d.type, d.dosageForm, d.specification, d.unit, d.tinyUnit, d.factor, d.sellPrice, d.criticalInventory, d.inventory from Drug d JOIN DrugInventory di ON di.drugId=d.id  where d.hospitalId=? limit ?,?',
        findDrugInventories: 'select SQL_CALC_FOUND_ROWS di.id, di.operatorName,di.createDate, d.type,di.drugId, di.restAmount, di.amount, batchNo, expireDate, purchasePrice, d.`code`, d.`name`, d.company, d.criticalInventory, d.dosageForm,d.factor, d.inventory, d.sellPrice, d.unit, d.tinyUnit, d.specification from DrugInventory di left join Drug d on di.drugId =d.id where d.hospitalId=? order by di.createDate desc limit ?,?',
        insertDrugInventory: 'insert DrugInventory set ?',
        updateDrugInventory: 'update DrugInventory set ? where id=?',
        updateDrugInventoryBy: 'update DrugInventory set restAmount = restAmount - ? where id=?',
        updateDrugRestInventory: 'update Drug set inventory = inventory + ? where id=?',
        deleteDrugInventory: 'delete DrugInventory where id=?',
        findDrugInventoryBy: 'select * from DrugInventory where hospitalId=? and drugId=? and batchNo=?',
        findDrugInventoryHistories: 'select SQL_CALC_FOUND_ROWS d.company,d.code,d.sellPrice, d.dosageForm, d.specification,d.`name`,d.tinyUnit, d.unit, d.type, h.id, h.amount, h.`comment`, h.drugId, h.operateDate, h.operator, h.operatorName, di.batchNo, di.expireDate, di.purchasePrice, di.restAmount from DrugInventoryHistory h left JOIN DrugInventory di on di.id =h.inventoryId left JOIN Drug d on d.id=h.drugId where h.type = ? and h.hospitalId=? order by h.operateDate desc limit ?,?',
        insertDiseaseWord: 'insert DiseaseDicWord set ?',
        updateDiseaseWord: 'update DiseaseDicWord set ? where id = ?',
        deleteDiseaseWord: 'delete from DiseaseDicWord where id = ?',
        findDiseasesOfDepartment: 'select id, `name` from DiseaseDic where departmentId = ?',
        findDiseaseDicWords: 'select * from DiseaseDicWord where diseaseId = ? and type = ?',
        findDrugCategoryByPidAndName: 'select * from DrugCategory where hospitalId=? and pid = ? and name=? and type=?',
        insertDrugCategory: 'insert DrugCategory set ?',
        updateDrugCategory: 'update DrugCategory set ? where id = ?',
        deleteDrugCategory: 'delete from DrugCategory where id = ?',
        findDrugCategories: 'select id, pid, name from DrugCategory where hospitalId = ? and type = ? order by pid',
        findDrugCategoriesById: 'select id, pid, name from DrugCategory where hospitalId = ? and type = ? and id = ? order by pid ',
        addOutpatientServiceType: 'insert OutpatientServiceType set ?',
        updateOutpatientServiceType: 'update OutpatientServiceType set ? where id = ?',
        deleteOutpatientServiceType: 'delete from OutpatientServiceType where id = ?',
        findOutpatientServiceTypes: 'select id, name, fee from OutpatientServiceType',
        findOutPatientTypeById: 'select id, name,fee from OutpatientServiceType where id =?'
    },
    medical: {
        insertMedicalHistory: 'insert MedicalHistory set ?',
        updateMedicalHistory: 'update MedicalHistory set ? where id=?',
        findMedicalHistoryBy: 'select * from MedicalHistory where registrationId = ?',
        findMedicalHistoryByPatientId: 'select * from MedicalHistory where patientId = ?  order by createDate desc limit ?,?',
        findRecipesByOrderNo: 'select * from Recipe where orderNo = ?',
        removeRecipe: 'delete from Recipe where registrationId=? and id = ?',
        findRecipe: 'select * from Recipe where id = ?',
        updateRecipe: 'update Recipe set ? where id = ?',
        insertRecipe: 'insert Recipe set ?',
        insertPrescription: 'insert Prescription set ?',
        updatePrescription: 'update Prescription set ? where id = ?',
        findPrescriptionsBy: 'select r.*, m.`status` from Prescription r left JOIN MedicalOrder m on m.orderNo = r.orderNo where r.registrationId = ?',
        findPrescription: 'select * from Prescription where id = ?',
        removePrescription: 'delete from Prescription where id =? and registrationId = ?',
        findPrescriptionsByOrderNo: 'select p.*, m.status from Prescription p left JOIN MedicalOrder m on m.orderNo = p.orderNo where p.orderNo = ?',
        findRecipesBy: 'select r.*, m.`status` from Recipe r left JOIN MedicalOrder m on m.orderNo = r.orderNo where r.registrationId = ?',
        findDrugInventoryByDrugId: 'select id, drugId, restAmount, batchNo, expireDate, code from  DrugInventory where drugId=? and expireDate>=? and restAmount>=? order by expireDate ',
        addOutsideProcess: 'insert OutsideProcess set ?',
        updateOutsideProcess: 'update OutsideProcess set ? where id = ?',
        deleteOutsideProcess: 'delete from OutsideProcess where id = ?',
        findOutsideProcesses: 'select SQL_CALC_FOUND_ROWS o.*, p.medicalRecordNo, po.`name`, po.gender, po.realName, po.mobile from OutsideProcess o left JOIN Patient p on p.id = o.patientId left JOIN PatientBasicInfo po on po.id=p.patientBasicInfoId  where o.hospitalId =? '
    },
    order: {
        insert: 'insert MedicalOrder set ?',
        removeOrder: 'delete from MedicalOrder where orderNo = ?',
        update: 'update MedicalOrder set ? where orderNo =?',
        updateTotalPrice: 'update MedicalOrder set amount = amount + ?, paymentAmount=amount where orderNo = ?',
        updateBy: 'update MedicalOrder set ?, paidAmount=paymentAmount where orderNo =?',
        findExtraFeeBy: 'SELECT d.`value` as fieldName, sum(receivable) as sum from Prescription p left join ChargeItem c ON p.chargeItemId = c.id left join Dictionary d on d.id=c.categoryId WHERE c.categoryId is not NULL and p.orderNo=? group by categoryId',
        findOrdersByStatus: 'select SQL_CALC_FOUND_ROWS m.*, r.patientName, r.departmentId, r.departmentName,r.patientMobile,r.memberType, r.hospitalId, r.hospitalName, r.doctorId, r.doctorName,r.patientId from MedicalOrder m left join Registration r on m.registrationId = r.id where m.hospitalId= ? ',
        findOrdersBy: 'select SQL_CALC_FOUND_ROWS  m.*, r.patientName,r.patientMobile,r.memberType, r.departmentId, r.departmentName, r.hospitalId, r.hospitalName, r.doctorId, r.doctorName,r.patientId from MedicalOrder m left join Registration r on m.registrationId = r.id where m.hospitalId= ? ',
        findOrdersByWithPerformance: 'select SQL_CALC_FOUND_ROWS m.orderNo, m.type, m.paidAmount, m.amount, m.paymentDate,r.patientName,r.departmentId, r.departmentName, r.doctorId, r.doctorName from MedicalOrder m left join Registration r on m.registrationId = r.id where m.hospitalId= ?',
        findDrugUsageRecords: 'SELECT SQL_CALC_FOUND_ROWS rp.*, rg.patientName, rg.doctorName, rg.departmentName, rg.patientMobile, m.drugSenderName, m.sendDrugDate from Recipe rp left join Registration rg on rp.registrationId = rg.id left join MedicalOrder m on m.orderNo = rp.orderNo where rp.hospitalId=? ',
        findOrdersByType: 'select SQL_CALC_FOUND_ROWS m.*, r.patientName,r.patientMobile,r.memberType,r.departmentId,r.patientId, r.departmentName, r.hospitalId, r.hospitalName, r.doctorId, r.doctorName from MedicalOrder m left join Registration r on m.registrationId = r.id where m.hospitalId=? and m.type=? ',
        findOrdersByTypeAndStatus: 'select SQL_CALC_FOUND_ROWS m.*, r.patientName,r.patientMobile,r.memberType, r.patientId, r.departmentId, r.departmentName, r.hospitalId, r.hospitalName, r.doctorId, r.doctorName from MedicalOrder m left join Registration r on m.registrationId = r.id where m.hospitalId=? and m.type=? and m.status=? limit ?,?',
        findByOrderNos: 'select m.discountRate, m.registrationId, m.type,m.orderNo,m.createDate, m.amount, m.paymentAmount, r.patientName,r.patientMobile,  r.departmentName, r.doctorName,r.patientId from MedicalOrder m left join Registration r on m.registrationId = r.id where m.hospitalId= ? and m.status=0 and m.orderNo in ',
        findByOrderNo: 'select m.discountRate, m.cardCharge, m.registrationId, m.type,m.orderNo,m.createDate, m.amount, m.paymentAmount, r.patientName,r.patientMobile,  r.departmentName, r.doctorName,r.patientId,m.invoiceSequenceNo, r.hospitalName, m.paidAmount1, m.paidAmount2, m.paidAmount3, m.paymentType1,m.paymentType2, m.paymentType3, m.paidAmount, m.chargedByName, m.chargeDate, m.invoiceSequenceNo, r.businessPeopleId from MedicalOrder m left join Registration r on m.registrationId = r.id where m.hospitalId= ? and m.orderNo=?',
        findOrderByOrderNo: 'select r.patientBasicInfoId, r.patientMobile, h.patientName, r.hospitalName, r.departmentName, r.doctorName,r.sequence from MedicalOrder m left join Registration r on m.registrationId = r.id left JOIN MedicalHistory h on h.registrationId = m.registrationId where m.orderNo=?',
        findAccountInfo: 'select m.paymentDate, m.paymentType, m.paidAmount, m.paymentType1, m.paidAmount1, m.paymentType2, m.paidAmount2, m.paymentType3, m.paidAmount3, r.memberType, r.createDate, r.patientName,r.patientMobile,r.memberType,r.departmentId,r.patientId, r.departmentName, r.hospitalName, r.doctorId, r.doctorName from MedicalOrder m left join Registration r on m.registrationId = r.id where m.hospitalId=?'
    },
    angelGuiderTransactionFlow: {
        findAll: 'select SQL_CALC_FOUND_ROWS af.id, af.createDate,af.amount, se.amount as originAmount, af.flowNo, af.`status`, af.transactionCode, af.comment, af.`status`, ac.accountName, se.patientName, se.type, se.angelGuiderName, se.agentShare, se.angelGuiderShare, se.platformShare, se.prescriptionShare,se.recipeShare,se.hospitalName, se.hospitalPayableAmount, af.currentBalance  from AngelGuiderTransactionFlow af left join AngelGuiderShare sh on sh.id = af.shareId left join Account ac on ac.id = af.accountId and ac.type = 1 left JOIN AngelGuiderShare se on se.id = af.shareId where ac.uid=? ',
        findAccount: 'select balance, availableBalance from Account where type = 1 and uid =?'
    }
};
